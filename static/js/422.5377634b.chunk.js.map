{"version":3,"file":"static/js/422.5377634b.chunk.js","mappings":"wQACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAyF,0B,SCInFA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA4DZ,EA1DkB,WAChB,IAAAC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIL,IAAgBM,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MACXC,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EAEjDP,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAY,EAAAA,EAAAA,GAAA,GACPL,EAAOI,IAEZ,EAQME,EAAQ,WACZZ,GAAQJ,EAAAA,EAAAA,GAAC,CAAC,EAAIL,GAChB,EAEMsB,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SAEXtB,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SAEf,OACEuB,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAaC,SAhBX,SAAAC,GACnBA,EAAEC,iBACFpB,GAASqB,EAAAA,EAAAA,IAAMvB,IACfa,GACF,EAYwDW,aAAa,MAAKC,SAAA,EACtER,EAAAA,EAAAA,MAAA,SAAOS,QAASZ,EAASI,UAAWC,EAAaM,SAAA,CAAC,SAEhDE,EAAAA,EAAAA,KAAA,SACEnB,MAAOf,EACPmC,SAAUxB,EACVK,KAAK,QACLF,KAAK,QACLsB,GAAIf,EACJgB,UAAQ,QAGZb,EAAAA,EAAAA,MAAA,SAAOS,QAASV,EAAYE,UAAWC,EAAaM,SAAA,CAAC,YAEnDE,EAAAA,EAAAA,KAAA,SACEnB,MAAOd,EACPkC,SAAUxB,EACVK,KAAK,WACLF,KAAK,WACLsB,GAAIb,EACJc,UAAQ,QAGZH,EAAAA,EAAAA,KAAA,UAAQT,UAAWC,EAAeV,KAAK,SAAQgB,SAAC,YAKtD,E,oBChCA,EAvBc,WACZ,IAAMM,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEtBnC,GAAWC,EAAAA,EAAAA,MAKjB,OAAIiC,GACKT,EAAAA,EAAAA,KAACW,EAAAA,GAAQ,CAACC,GAAG,eAIpBtB,EAAAA,EAAAA,MAAA,OAAAQ,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACHM,IAAeJ,EAAAA,EAAAA,KAACa,EAAAA,EAAM,KACvBb,EAAAA,EAAAA,KAACc,EAAS,CAACrB,SAZK,SAAAsB,GAClBxC,GAASqB,EAAAA,EAAAA,IAAMmB,GACjB,IAWKR,IAAaP,EAAAA,EAAAA,KAAA,KAAGgB,MAAO,CAAEC,MAAO,OAAQnB,SAAES,MAGjD,C","sources":["webpack://goit-react-hw-08-phonebook-2/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","Pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"button\":\"LoginForm_button__LodJg\"};","import { useDispatch } from 'react-redux';\nimport { useState, useId } from 'react';\nimport { login } from '../../redux/auth/auth-operations';\nimport styles from './LoginForm.module.css';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\nconst LoginForm = () => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const dispatch = useDispatch();\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login(state));\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { email, password } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label htmlFor={emailId} className={styles.label}>\n        Email\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n        />\n      </label>\n      <label htmlFor={passwordId} className={styles.label}>\n        Password\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        LogIn\n      </button>\n    </form>\n  );\n};\nexport default LoginForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectAuthError,\n  selectAuthLoading,\n  selectIsLogin,\n} from '../redux/auth/auth-selectors';\nimport { login } from '../redux/auth/auth-operations';\nimport LoginForm from '../components/LoginForm/LoginForm';\nimport { Navigate } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst Login = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const isLogin = useSelector(selectIsLogin);\n\n  const dispatch = useDispatch();\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      {authLoading && <Loader />}\n      <LoginForm onSubmit={handleLogin} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </div>\n  );\n};\nexport default Login;\n"],"names":["INITIAL_STATE","email","password","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","handleChange","_ref","target","name","value","type","checked","newValue","_defineProperty","reset","emailId","useId","passwordId","_jsxs","className","styles","onSubmit","e","preventDefault","login","autoComplete","children","htmlFor","_jsx","onChange","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","isLogin","selectIsLogin","Navigate","to","Loader","LoginForm","data","style","color"],"sourceRoot":""}