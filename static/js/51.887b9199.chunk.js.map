{"version":3,"file":"static/js/51.887b9199.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook-2/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","Pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"RegisterForm_block__9f3Q-\"};","import { useDispatch } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operations';\nimport { useState, useId } from 'react';\nimport styles from './RegisterForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = () => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const dispatch = useDispatch();\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState({\n      ...state,\n      [name]: newValue,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signup(state));\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...INITIAL_STATE });\n  };\n\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { name, email, password } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <div className={styles.block}>\n        <label htmlFor={nameId}>\n          Name:\n          <input\n            value={name}\n            onChange={handleChange}\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Введіть ім'я\"\n            pattern=\"^[^\\d]+$\"\n            required\n          />\n        </label>\n      </div>\n      <div className={styles.block}>\n        <label htmlFor={emailId}>\n          Email:\n          <input\n            value={email}\n            onChange={handleChange}\n            id={emailId}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Введіть адресу електронної пошти\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n          />\n        </label>\n      </div>\n      <div className={styles.block}>\n        <label htmlFor={passwordId}>\n          Password:\n          <input\n            value={password}\n            onChange={handleChange}\n            id={passwordId}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Введіть пароль\"\n            // pattern=\"^[a-zA-Z0-9!@#$%^&*()-_=+`~[\\]{}|:<>/?]+$\"\n            required\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\nexport default RegisterForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { signup } from '../redux/auth/auth-operations';\n\nimport {\n  selectAuthLoading,\n  selectAuthError,\n  selectIsLogin,\n} from '../redux/auth/auth-selectors';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport Loader from 'components/Loader/Loader';\n\nconst Register = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const isLogin = useSelector(selectIsLogin);\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <h2>Registration</h2>\n      {authLoading && <Loader />}\n      <RegisterForm onSubmit={handleSignup} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </div>\n  );\n};\nexport default Register;\n"],"names":["INITIAL_STATE","name","email","password","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","handleChange","_ref","target","value","type","checked","newValue","_defineProperty","reset","nameId","useId","emailId","passwordId","_jsxs","className","styles","onSubmit","e","preventDefault","signup","autoComplete","children","_jsx","htmlFor","onChange","id","placeholder","pattern","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","isLogin","selectIsLogin","Navigate","to","Loader","RegisterForm","data","style","color"],"sourceRoot":""}